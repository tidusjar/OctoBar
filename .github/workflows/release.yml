name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        include:
          - os: macos-latest
            platform: mac
            dist-command: dist:mac
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Build platform-specific package
        run: npm run ${{ matrix.dist-command }}

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          # Copy build artifacts to release-assets directory
          cp release/*.dmg release-assets/ 2>/dev/null || true
          cp release/*.exe release-assets/ 2>/dev/null || true
          cp release/*.nsis release-assets/ 2>/dev/null || true
          ls -la release-assets/

      - name: Release with semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release