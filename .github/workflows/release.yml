name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        include:
          - os: macos-latest
            platform: mac
            dist-command: dist:mac
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Build platform-specific package
        run: npm run ${{ matrix.dist-command }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: |
            release/*.dmg
            release/*.exe
            release/*.nsis
          if-no-files-found: error

  publish:
    needs: release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          # Copy all build artifacts to release-assets directory
          find artifacts -name "*.dmg" -exec cp {} release-assets/ \;
          find artifacts -name "*.exe" -exec cp {} release-assets/ \;
          find artifacts -name "*.nsis" -exec cp {} release-assets/ \;
          ls -la release-assets/

      - name: Release with semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release